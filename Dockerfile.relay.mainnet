FROM golang:1.13-alpine as builder
LABEL maintainer="cryptoforge.ninja@gmail.com"

ENV GODEBUG netdns=cgo

ARG checkout="v0.12.1-beta-branch"
# ARG checkout="master"

# Install dependencies and build the binaries.
RUN apk add --no-cache --update alpine-sdk git make gcc openssh-client

RUN git clone https://github.com/lightningnetwork/lnd /go/src/github.com/lightningnetwork/lnd
RUN cd /go/src/github.com/lightningnetwork/lnd \
    &&  git checkout $checkout \
    &&  make \
    &&  make install tags="signrpc walletrpc chainrpc invoicesrpc experimental"

FROM alpine:3.11 as final

EXPOSE 80
EXPOSE 9735

ENV NODE_ENV production
ENV NODE_SCHEME http

RUN apk --no-cache add bash ca-certificates

COPY --from=builder /go/bin/lncli /bin/
COPY --from=builder /go/bin/lnd /bin/

RUN apk add --no-cache --update nodejs=12.21.0-r0 nodejs-npm=12.21.0-r0 sqlite=3.30.1-r2 git supervisor

RUN git clone https://github.com/masterial/play-platform-relay /relay/

WORKDIR /relay/

ARG branch="main"

RUN git checkout $branch

RUN apk --no-cache add g++ gcc libgcc libstdc++ linux-headers make python jq git curl libmcrypt-dev vim

USER root

RUN rm -rf node_modules/
RUN npm install
RUN npm install --quiet node-gyp@3.8.0 -g
RUN npm -g config set user root
RUN npm install nw-gyp -g
RUN npm uninstall sqlite3
RUN npm install sqlite3 --build-from-source --runtime=node-webkit --target_arch=x64 --target=0.42.0
RUN npm rebuild
RUN npm run tsc

VOLUME /relay/.lnd

COPY ./docker/lnd.conf.sample /relay/.lnd/lnd.conf

#Uncomment if you have a copy of the channel.db you want to use.
#COPY ./channel.db /relay/.lnd/data/graph/mainnet/

RUN git clone https://github.com/pay2play/sphinx-keysend-test /sphinx-keysend/
WORKDIR /sphinx-keysend/

ARG sphinx_keysend_checkout="binary"

RUN git checkout $sphinx_keysend_checkout
RUN npm install

WORKDIR /relay/

RUN apk --no-cache add expect bash

RUN mkdir -p /var/log/supervisor
COPY ./docker/supervisord.conf /etc/supervisord.conf
COPY ./docker/lnd_supervisor.conf /etc/supervisor.d/lnd_supervisor.ini
COPY ./docker/relay_supervisor.conf /etc/supervisor.d/relay_supervisor.ini
COPY ./docker/aliases.sh /etc/profile.d/aliases.sh

CMD touch ./sphinx.db

ENV ENV="/etc/profile"

ENTRYPOINT [ "bash", "/relay/docker/entrypoint.relay.sh" ]
